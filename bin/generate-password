#!/usr/local/php5/bin/php
<?php

$alphabets = [];

$alphabets['num'] = '0123456789';
$alphabets['sym'] = '!@#$%?&*()_+-@{}[]|';
$alphabets['lower'] = 'abcdefghijklmnopqrstuvwxyz';
$alphabets['upper'] = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
$alphabets['alpha'] = $alphabets['lower'] . $alphabets['upper'];
$alphabets['alphanum'] = $alphabets['num'] . $alphabets['alpha'];
$alphabets['random'] = $alphabets['num'] . $alphabets['alpha'] . $alphabets['sym'];

function array_get($array, $key, $default = null)
{
	return array_key_exists($key, $array) ? $array[$key] : $default;
}

$args = $_SERVER['argv'];
$length = array_get($args, 1, 10);
$type = array_get($args, 2, 'random');
$alphabet = array_get($alphabets, $type);

if ($length === '-h' || $length === '--help') {
	echo <<<EOD
usage: generate-password [-h|--help] [<length> [<alphabet>]]

ARGUMENTS
    length
        The length of the password to generate. By default, the length is set
        to 10 characters.

    alphabet
        The alphabet to use to generate the password. Valid alphabets are num,
        sym, lower, upper, alpha, alphanum and random. By default, the alphabet
        used is random.

OPTIONS
    -h, --help
        Prints this help.
EOD;
} elseif ($alphabet === null) {
	error_log('Invalid alphabet type.');
	exit;
}

$password = '';

for ($i = 0; $i < (int)$length; $i++) {
	$character = rand(0, strlen($alphabet) - 1);
	$password .= $alphabet{$character};
}

echo $password.PHP_EOL;
